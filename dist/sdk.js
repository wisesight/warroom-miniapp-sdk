function _classCallCheck(b,a){if(!(b instanceof a))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,_toPropertyKey(c.key),c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),Object.defineProperty(a,"prototype",{writable:!1}),a}function _toPropertyKey(a){var b=_toPrimitive(a,"string");return"symbol"==typeof b?b:b+""}function _toPrimitive(a,b){if("object"!=typeof a||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=typeof d)return d;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}let Warroom=/*#__PURE__*/function(){function a(){_classCallCheck(this,a),this.appType="",this.token="",this.isReady=!1,this.appId="",this.urlParams=new URLSearchParams(window.location.search),this.mode=this.urlParams.get("mode"),this.verifyUrl="devtool"===this.mode?"https://external-staging.warroom.wisesight.com:8888/token/verify":"https://app.warroom.wisesight.com/token/verify"}return _createClass(a,[{key:"postMessageToParent",value:function(a,b){if(""===this.token)throw Error("Authentication is not valid please init app before use");else parent.postMessage({"warroom-miniapp-type":this.appType,event:a,payload:b,token:this.token,appId:this.appId},"*")}},{key:"sleep",value:function(a){return new Promise(b=>setTimeout(b,a))}},{key:"handleMessageFromWarroom",value:function(a){if("warroom"===a.data.provider){if((a.data.token!==this.token||""===this.token)&&"response-to:status:init"!==a.data.event)throw Error("Authentication is not valid please init app before use");else{const b=a.data.event.replace("response-to","warroom-miniapp");document.dispatchEvent(new CustomEvent(b,{detail:a.data.payload}))}"production"!==this.mode&&console.info("[MINI APP]",a.data)}}},{key:"init",value:async function({appType:a,appId:b}){window.addEventListener("message",this.handleMessageFromWarroom.bind(this)),this.appType=a;const c=this.urlParams.get("token"),d=await fetch(this.verifyUrl,{headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST",body:JSON.stringify({token:c})}),e=await d.json();// if (verifyReq.status === 200 && appId === verifyRes.miniappId) {
if(200===d.status)this.appId=b,this.token=c;else return new Promise((a,b)=>{b(new Error("verify token failed or appId doesn't match"))});return this.postMessageToParent("status:init",new Date),new Promise(a=>{document.addEventListener("warroom-miniapp:status:init",()=>{this.isReady=!0,a(!0)})})}},{key:"isInMiniApp",value:function(){return document.referrer.includes("warroom.wisewsight.com")&&isInIframe()}},{key:"isInIframe",value:function(){try{return window.self!==window.top}catch(a){return!0}}},{key:"resize",value:function(a){this.postMessageToParent("control:resize",{size:a})}},{key:"getClientInformation",value:function(){return this.getMethodInterface("client-information")}},{key:"getSubject",value:function(){return this.getMethodInterface("subject")}},{key:"getCurrentAgent",value:function(){return this.getMethodInterface("current-agent")}},{key:"getCurrentThread",value:function(){return this.getMethodInterface("current-thread")}},{key:"getCurrentCase",value:function(){return this.getMethodInterface("current-case")}},{key:"getCurrentUser",value:function(){return this.getMethodInterface("current-user")}},{key:"getUserCaseHistory",value:function(a){return this.getMethodInterface("user-case-history",a)}},{key:"onCloseCase",value:function(a){this.eventMethodInterface("send:on-close-case",a)}},{key:"onNewCase",value:function(a){this.eventMethodInterface("send:on-new-case",a)}},{key:"onAssignedCase",value:function(a){this.eventMethodInterface("send:on-assigned-case",a)}},{key:"onReply",value:function(a){this.eventMethodInterface("send:on-reply",a)}},{key:"onReplyFormChange",value:function(a){this.eventMethodInterface("send:on-form-change",a)}},{key:"onTagged",value:function(a){this.eventMethodInterface("send:on-tag-message",a)}},{key:"onFilterChanged",value:function(a){this.eventMethodInterface("send:agent-filter-changed",a)}},{key:"onAgentStatusChanged",value:function(a){this.eventMethodInterface("send:agent-status-changed",a)}},{key:"onRefreshThread",value:function(a){this.eventMethodInterface("send:agent-refresh-thread",a)}},{key:"onFocusPost",value:function(a){this.eventMethodInterface("send:on-focus-post",a)}},{key:"setReplyMessage",value:function(a){this.postMessageToParent("send:set-reply-message",a)}},{key:"eventMethodInterface",value:function(a,b){document.addEventListener(`warroom-miniapp:${a}`,a=>{b(a.detail)},!1)}},{key:"getMethodInterface",value:function(a,b){return this.postMessageToParent(`get:${a}`,b),new Promise(b=>{document.addEventListener(`warroom-miniapp:get:${a}`,a=>{b(a.detail)},!1)})}}])}();const warroom=new Warroom;
